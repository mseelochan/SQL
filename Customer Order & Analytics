In this SQL, I am querying a database with multiple tables and I am using SQLite to relate relevant customer information and order data.

#1. How many unique orders were placed in January? 
SELECT COUNT(DISTINCT(orderID))
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone? 

SELECT COUNT(DISTINCT(orderID))
FROM BIT_DB.JanSales 
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT(acctnum) 
FROM BIT_DB.customers
INNER JOIN FebSales 
ON BIT_DB.customers.order_id = BIT_DB.FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';


#4. Which product was the cheapest one sold in January, and what was the price?

SELECT DISTINCT(Product), MIN(price) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID' 
GROUP BY Product, price
ORDER BY price ASC 
LIMIT 1; 

-- A more accurate answer 

SELECT DISTINCT(Product), price 
FROM BIT_DB.JanSales 
WHERE price IN(SELECT MIN(price) FROM BIT_DB.JanSales)
AND length(orderID) = 6
AND orderID <> 'OrderID';

#5. What is the total revenue for each product sold in January?

SELECT DISTINCT(Product), SUM(Quantity) * price) AS total_revenue
FROM BIT_DB.JanSales 
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product, SUM(Quantity), SUM(Quantity)* price  AS total_revenue 
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT(acctnum), AVG(Quantity*price) 
FROM BIT_DB.FebSales 
LEFT JOIN BIT_DB.customers 
ON BIT_DB.FebSales.orderID = BIT_DB.customers.order_id
WHERE Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY acctnum;

#7.5 List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product, SUM(quantity) 
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;


#8. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT DISTINCT(location), COUNT(orderID)
FROM BIT_DB.JanSales 
WHERE location like '%NY%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) >= 3;

#9. -- How many of each type of headphone were sold in February?

SELECT Product, SUM(Quantity) 
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product;

#10. What was the average amount spent per account in February?
SELECT avg(Feb.Quantity*Feb.price) AS avg_spent
FROM BIT_DB.customers cust
LEFT JOIN BIT_DB.FebSales Feb
ON cust.order_id = Feb.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#11. What was the average quantity of products purchased per account in February?

SELECT sum(Quantity)/count(cust.acctnum) AS AVG_Quantity
FROM BIT_DB.FebSales AS Feb
lEFT JOIN BIT_DB.customers cust
ON Feb.orderID = cust.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#12.-- Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT DISTINCT(Product), sum(Quantity)*price AS total_revenue 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product
ORDER BY total_revenue desc
LIMIT 1;
